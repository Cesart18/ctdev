---
import RepoCard from "../components/RepoCard.astro";

import { Octokit } from "@octokit/rest";
import type { Repository } from "../domain/entities/Repository";
import { gitrepoToEntity } from "../domain/mapper/gitrepoToEntity";
import type { GitRepo } from "../domain/models/GitRepo";



    const auth = process.env.AUTH_TOKEN;

const octokit = new Octokit({
  auth: auth,
});

const resp = await octokit.request("GET /users/cesart18/repos", {
    headers: { "X-GitHub-Api-Version": "2022-11-28" }
});

console.log(resp.data);

const repositories:Repository[] = await resp.data.map( (repo:GitRepo) => {
    return gitrepoToEntity(repo);
})



const lastRepo = repositories
.sort((a,b)=> new Date(b.data.createdAt).getTime() - new Date(a.data.createdAt).getTime() )
.slice(0,5);
---

<section>
    <h3>REPOSITORIOS MAS RECIENTES</h3>
    <div class="repo-container">
        {
            lastRepo.map( repo => (
                <RepoCard repo={repo}/>
            ))
        }
    </div>
    <a href="https://github.com/cesart18/" target="_blank" class="btn-secondary">Ver todos los repositorios</a>
    <hr>
</section>
<style>
    section{
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 40px;
        padding: 0 20px;
    }
    hr{
        width: 100%;
        max-width: 560px;
    }
    .repo-container{
        display: flex;
        flex-direction: column;
        gap: 20px;
        align-items: center;
        width: 100%;
        max-width: 100%;
    }
</style>